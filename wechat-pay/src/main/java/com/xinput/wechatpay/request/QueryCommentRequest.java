package com.xinput.wechatpay.request;import com.thoughtworks.xstream.annotations.XStreamAlias;import com.xinput.wechatpay.exception.WechatPayException;import javax.validation.constraints.NotEmpty;import javax.validation.constraints.NotNull;/** * 拉取订单评价数据 * * @author <a href="mailto:xinput.xx@gmail.com">xinput</a> * @date 2020-09-27 12:41 */@XStreamAlias("xml")public class QueryCommentRequest extends BaseWeChatPayRequest {    /**     * 开始时间     * 必填: 是     * 类型: String(19)     * 示例值: 20170724000000     * 描述: 按用户评论时间批量拉取的起始时间，格式为yyyyMMddHHmmss     */    @NotEmpty(message = "[begin_time] 不能为空")    @XStreamAlias("begin_time")    private String begin_time;    /**     * 结束时间     * 必填: 是     * 类型: String(19)     * 示例值: 20170724000000     * 描述: 按用户评论时间批量拉取的起始时间，格式为yyyyMMddHHmmss     */    @NotEmpty(message = "[end_time] 不能为空")    @XStreamAlias("end_time")    private String end_time;    /**     * 位移     * 必填: 是     * 类型: uint(64)     * 示例值: 0     * 描述: 指定从某条记录的下一条开始返回记录。接口调用成功时，会返回本次查询最后一条数据的offset。     * 商户需要翻页时，应该把本次调用返回的offset 作为下次调用的入参。注意offset是评论数据在微信     * 支付后台保存的索引，未必是连续的     */    @NotNull(message = "[offset] 不能为空")    @XStreamAlias("offset")    private Integer offset;    /**     * 条数     * 必填: 是     * 类型: uint(32)     * 示例值: 100     * 描述: 一次拉取的条数, 最大值是200，默认是200     */    @XStreamAlias("limit")    private Integer limit;    public String getBegin_time() {        return begin_time;    }    public void setBegin_time(String begin_time) {        this.begin_time = begin_time;    }    public String getEnd_time() {        return end_time;    }    public void setEnd_time(String end_time) {        this.end_time = end_time;    }    public Integer getOffset() {        return offset;    }    public void setOffset(Integer offset) {        this.offset = offset;    }    public Integer getLimit() {        return limit;    }    public void setLimit(Integer limit) {        this.limit = limit;    }    @Override    public void checkConstraints() throws WechatPayException {        checkField();    }}