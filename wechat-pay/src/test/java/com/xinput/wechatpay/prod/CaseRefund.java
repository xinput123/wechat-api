package com.xinput.wechatpay.prod;import com.xinput.bleach.util.BuilderUtils;import com.xinput.bleach.util.JsonUtils;import com.xinput.bleach.util.ObjectId;import com.xinput.wechatpay.WechatPayApi;import com.xinput.wechatpay.exception.WechatPayException;import com.xinput.wechatpay.request.RefundRequest;import com.xinput.wechatpay.response.RefundResponse;import org.junit.jupiter.api.Test;/** * 退款申请 */public class CaseRefund {    private static final String transactionId = "4200000764202009188340047847";    private static final String outTradeNo = "5f646c8d280319c40fde6bf9";    /**     * 根据微信订单号退款     */    @Test    public void refund01() throws WechatPayException {        RefundResponse response = WechatPayApi.refundByTransactionId(                transactionId,                ObjectId.stringId(),                100,                5);        System.out.println(JsonUtils.toJsonString(response, true));    }    /**     * 根据商户订单号退款     */    @Test    public void refund02() throws WechatPayException {        RefundRequest refundRequest = BuilderUtils.of(RefundRequest::new)                .with(RefundRequest::setOut_refund_no, ObjectId.stringId())                .with(RefundRequest::setTotal_fee, 100)                .with(RefundRequest::setRefund_fee, 3)                .with(RefundRequest::setOut_trade_no, outTradeNo)                .build();        RefundResponse response = WechatPayApi.refund(refundRequest);        System.out.println(JsonUtils.toJsonString(response, true));    }    @Test    public void refund() throws WechatPayException {        RefundRequest refundRequest = BuilderUtils.of(RefundRequest::new)                .with(RefundRequest::setTotal_fee, 100)                .with(RefundRequest::setTransaction_id, transactionId)                .with(RefundRequest::setOut_trade_no, outTradeNo)                .build();        RefundResponse response = WechatPayApi.refund(refundRequest);        System.out.println(JsonUtils.toJsonString(response, true));    }}