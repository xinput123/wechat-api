package com.xinput.wechatpay;import com.xinput.bleach.util.BuilderUtils;import com.xinput.bleach.util.JsonUtils;import com.xinput.bleach.util.Logs;import com.xinput.wechatpay.request.QueryCommentRequest;import com.xinput.wechatpay.response.QueryCommentResponse;import org.junit.jupiter.api.Test;import org.slf4j.Logger;import static org.junit.jupiter.api.Assertions.assertEquals;/** * 拉取订单评价数据 */public class Case_QueryComment {    private static final Logger logger = Logs.get();    private static final String START_TIME = "20200906000000";    private static final String END_TIME = "20200925000000";    private static final int OFFSET = 0;    private static final int LIMIT = 20;    @Test    public void queryComment01() throws Exception {        QueryCommentResponse resp = WechatPayApi.queryComment(START_TIME, END_TIME);        logger.info(JsonUtils.toJsonString(resp, true));        assertEquals(resp.getComments().size(), 1);        assertEquals(resp.getComments().get(0).getCommentDateTime(), "2020-09-22 12:15:13");        assertEquals(resp.getComments().get(0).getTransaction_id(), "4200000764202009188340047847");        assertEquals(resp.getComments().get(0).getStar(), Integer.valueOf(5));    }    @Test    public void queryComment02() throws Exception {        QueryCommentResponse resp = WechatPayApi.queryComment(START_TIME, END_TIME, OFFSET);        logger.info(JsonUtils.toJsonString(resp, true));        assertEquals(resp.getComments().size(), 1);        assertEquals(resp.getComments().get(0).getCommentDateTime(), "2020-09-22 12:15:13");        assertEquals(resp.getComments().get(0).getTransaction_id(), "4200000764202009188340047847");        assertEquals(resp.getComments().get(0).getStar(), Integer.valueOf(5));    }    @Test    public void queryComment03() throws Exception {        QueryCommentResponse resp = WechatPayApi.queryComment(START_TIME, END_TIME, OFFSET, LIMIT);//        logger.info(JsonUtils.toJsonString(resp, true));        assertEquals(resp.getComments().size(), 1);        assertEquals(resp.getComments().get(0).getCommentDateTime(), "2020-09-22 12:15:13");        assertEquals(resp.getComments().get(0).getTransaction_id(), "4200000764202009188340047847");        assertEquals(resp.getComments().get(0).getStar(), Integer.valueOf(5));    }    @Test    public void queryComment04() throws Exception {        QueryCommentResponse resp = WechatPayApi.queryComment(START_TIME, END_TIME, -1, 0);//        logger.info(JsonUtils.toJsonString(resp, true));        assertEquals(resp.getComments().size(), 1);        assertEquals(resp.getComments().get(0).getCommentDateTime(), "2020-09-22 12:15:13");        assertEquals(resp.getComments().get(0).getTransaction_id(), "4200000764202009188340047847");        assertEquals(resp.getComments().get(0).getStar(), Integer.valueOf(5));    }    @Test    public void queryComment() throws Exception {        QueryCommentRequest req =                BuilderUtils.of(QueryCommentRequest::new)                        .with(QueryCommentRequest::setBegin_time, "20200906000000")                        .with(QueryCommentRequest::setEnd_time, "20200925000000")//                        .with(QueryCommentRequest::setOffset, 0)//                        .with(QueryCommentRequest::setLimit, 10)                        .build();        QueryCommentResponse resp = WechatPayApi.queryComment(req);        logger.info(JsonUtils.toJsonString(resp, true));//        assertEquals(resp.getComments().size(), 1);//        assertEquals(resp.getComments().get(0).getCommentDateTime(), "2020-09-22 12:15:13");//        assertEquals(resp.getComments().get(0).getTransaction_id(), "4200000764202009188340047847");//        assertEquals(resp.getComments().get(0).getStar(), Integer.valueOf(5));    }}