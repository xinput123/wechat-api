package com.xinput.wechatpay;import com.xinput.bleach.util.BuilderUtils;import com.xinput.bleach.util.JsonUtils;import com.xinput.bleach.util.Logs;import com.xinput.wechatpay.exception.WechatPayException;import com.xinput.wechatpay.request.CloseOrderRequest;import com.xinput.wechatpay.response.CloseOrderResponse;import com.xinput.wechatpay.response.OrderQueryResponse;import org.junit.jupiter.api.Test;import org.slf4j.Logger;/** * @author <a href="mailto:xinput.xx@gmail.com">xinput</a> * @date 2020-09-29 21:27 */public class Case_CloseOrder {    private static final Logger logger = Logs.get();    private static final String transaction_id = "4189210487820201002135417724907";    private static final String out_trade_no = "5f76c06498ce560a9debbddc";    @Test    public void orderQuery() {        try {            OrderQueryResponse response = WechatPayApi.queryOrderByOutTradeNo(out_trade_no);            logger.info(JsonUtils.toJsonString(response, true));        } catch (Exception e) {            e.printStackTrace();        }    }    @Test    public void orderQuery2() {        try {            OrderQueryResponse response = WechatPayApi.queryOrderByTransactionId(transaction_id);            logger.info(JsonUtils.toJsonString(response, true));        } catch (Exception e) {            e.printStackTrace();        }    }    @Test    public void closeOrder() throws WechatPayException {        CloseOrderResponse response = WechatPayApi.closeOrder(out_trade_no);        System.out.println(JsonUtils.toJsonString(response, true));    }    @Test    public void closeOrder2() throws WechatPayException {        CloseOrderRequest closeOrderRequest = BuilderUtils.of(CloseOrderRequest::new)//                .with(CloseOrderRequest::setOut_trade_no, out_trade_no)                .build();        CloseOrderResponse response = WechatPayApi.closeOrder(closeOrderRequest);        System.out.println(JsonUtils.toJsonString(response, true));    }}